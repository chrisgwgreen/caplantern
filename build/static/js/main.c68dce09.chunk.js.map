{"version":3,"sources":["serviceWorker.js","services/resize/index.js","components/Designer/components/ColourSelector/components/ColourButton/index.js","components/Designer/services/config/index.js","components/Designer/components/ColourSelector/index.js","components/Designer/components/AnimateHandleButton/index.js","components/Designer/index.js","components/ParallaxPanel/index.js","components/HeroVideo/index.js","components/ParallaxImage/index.js","scenes/Home/components/Map/index.js","scenes/Home/components/Map/services/config/index.js","scenes/Home/index.js","services/webgl/index.js","index.js"],"names":["Boolean","window","location","hostname","match","resizeDebounce","resizeEvents","addResizeEvent","event","push","processResize","clearTimeout","setTimeout","forEach","requestAnimationFrame","ColourButton","props","setColour","colour","isSelected","react_default","a","createElement","className","classNames","concat","colour-button--selected","data-colour","onClick","colours","blue","green","yellow","red","black","elements","screw","stl","material","THREE","specular","shininess","opacity","transparent","y","isEditable","body","color","switch","handle1","handle2","rotationY","Math","PI","ColourSelector","_this$props","this","isColourSelectorVisible","selectedColour","colour-selector--enabled","Object","keys","map","components_ColourButton","key","Component","AnimateHandleButton","onAnimateHandle","Designer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isStandOpen","selectedElementId","isMoved","isHandlesOpen","isAnimatingHandles","isTicking","lastX","renderScene","renderer","render","scene","camera","onMouseUp","bind","assertThisInitialized","onActionMove","onMouseDown","onActionStart","onActionEnd","addEventListeners","removeEventListeners","onWindowResize","_this2","width","mount","clientWidth","height","clientHeight","top","offsetTop","left","offsetLeft","background","fog","position","set","lookAt","antialias","setClearColor","setSize","setPixelRatio","devicePixelRatio","gammaInput","gammaOutput","shadowMap","enabled","domElement","appendChild","camera_pivot","Y_AXIS","add","plane","rotation","x","receiveShadow","addShadowedLight","threeSTLLoader","STLLoader","intersectMeshes","loader","elementId","loadStl","passiveOption","passive","addEventListener","removeEventListener","id","element","_this3","load","geometry","applyMatrix","makeTranslation","mesh","scale","castShadow","callback","selectElement","selectMaterial","selectMesh","z","intensity","directionalLight","shadow","right","bottom","near","far","mapSize","bias","setState","flashSelectedElement","disableColourSelector","start","_this4","animateProgress","performance","now","selectedElement","animateFlash","setHex","_this5","nowX","undefined","clientX","pageX","changedTouches","rotateY","mouseX","detectIntersect","raycaster","mouse","pageY","setFromCamera","intersects","intersectObjects","length","object","aspect","updateProjectionMatrix","_this$state","animateHandle","_this6","angle","degToRad","_this7","_this$state2","ref","components_ColourSelector","assign","components_AnimateHandleButton","ParallaxPanel","range","onResizeEvent","fixedParallax","rangeParallax","lockingParallax","scroll","boundingClientRect","parallax","getBoundingClientRect","ceil","scrollY","type","parallaxEvent","children","style","transform","HeroVideo","repositionVideo","hero","calcWidth","calcHeight","iframe","src","components_ParallaxPanel","title","allow","ParallaxImage","repositionImage","imageContainer","image","alt","Map","createGeoJSONCircle","center","radiusInKm","points","theta","coords","km","ret","distanceX","cos","distanceY","i","sin","data","features","coordinates","repositionMap","getLocation","mapboxgl","accessToken","container","mapContainer","zoom","scrollZoom","disable","on","lng","lat","addSource","addLayer","source","layout","paint","fill-color","fill-opacity","navigator","geolocation","getCurrentPosition","flyTo","longitude","latitude","renderCircle","console","log","Home","designer","canvas","document","WebGLRenderingContext","getContext","e","isWebGLAvailable","components_Designer","components_HeroVideo","components_ParallaxImage","components_Map","ReactDOM","scenes_Home","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c68dce09.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let resizeEvents = []\nlet resizeDebounce\n\nconst initResize = () => { \n  window.addEventListener('resize', processResize, false)\n}\n\nconst addResizeEvent = (event) => { \n  resizeEvents.push(event)\n}\n\nconst clearResizeEvents = (event) => { \n  resizeEvents = []\n}\n\nconst processResize= () => {\n  clearTimeout(resizeDebounce)\n\n  resizeDebounce = setTimeout(() => {\n    resizeEvents.forEach(event => {\n      window.requestAnimationFrame(() => event())\n    })\n  }, 200)\n}\n\nexport {\n  initResize,\n  addResizeEvent,\n  clearResizeEvents\n} ","import React from 'react'\nimport classNames from 'classnames'\nimport './styles.css'\nimport {\n  func,\n  bool,\n  string\n} from 'prop-types'\n\nfunction ColourButton(props) {\n  const {\n    setColour,\n    colour,\n    isSelected\n  } = props\n\n  return <div \n    className={\n      classNames(\n        'colour-button', \n        `colour-button__colour--${colour}`,\n        { \n          'colour-button--selected': isSelected \n        }\n      )\n    }\n    data-colour={colour}\n    onClick={()=>setColour(colour)}\n  ></div>\n}\n\nColourButton.propTypes = { \n  colour: string.isRequired,\n  isSelected: bool.isRequired,\n  setColour: func.isRequired\n}\n\nexport default ColourButton","import  * as THREE from 'three'\n\nconst flashAnimateTime = 400\n\n\nconst openAngle = 70\nconst angleAnimateTime = 300\n\nconst colours = {\n  blue: 0x1998CB,\n  green: 0x14CC60,\n  yellow: 0xF0CD13,\n  red: 0xEC3C37,\n  black: 0x000000,\n}\n\nconst elements = {\n  screw: {\n    stl: './stl/screw.stl',\n    material: new THREE.MeshPhongMaterial({\n      specular: 0x111111, \n      shininess: 200,\n      opacity: 0.7,\n      transparent: true\n    }),\n    y: 0.54,\n    isEditable: false,\n  },\n  body: {\n    stl: './stl/body.stl',\n    material: new THREE.MeshPhongMaterial({\n      color: colours.green, \n      specular: 0x111111, \n      shininess: 200,\n    }),\n    isEditable: true,\n    colour: 'green'\n  },\n  switch: {\n    stl: './stl/switch.stl',\n    material: new THREE.MeshPhongMaterial({\n      color: colours.yellow, \n      specular: 0x111111, \n      shininess: 200,\n    }),\n    isEditable: true,\n    colour: 'yellow'\n  },\n  handle1: {\n    stl: './stl/handle.stl',\n    material: new THREE.MeshPhongMaterial({\n      color: colours.yellow, \n      specular: 0x111111, \n      shininess: 200, \n    }),\n    isEditable: true,\n    colour: 'yellow'\n  },\n  handle2: {\n    stl: './stl/handle.stl',\n    material: new THREE.MeshPhongMaterial({\n      color: colours.yellow,\n      specular: 0x111111, \n      shininess: 200,\n    }),\n    isEditable: true,\n    colour: 'yellow',\n    rotationY: Math.PI\n  }\n}\n\nexport {\n  colours,\n  elements,\n  flashAnimateTime,\n  openAngle,\n  angleAnimateTime\n}","import React, { Component } from 'react'\nimport ColourButton from './components/ColourButton'\nimport {colours} from 'components/Designer/services/config'\nimport classNames from 'classnames'\nimport {\n  func,\n  bool,\n  string\n} from 'prop-types'\nimport './styles.css'\n\nclass ColourSelector extends Component {\n  render() {\n    const {\n      setColour,\n      isColourSelectorVisible,\n      selectedColour\n    } = this.props\n\n    return (\n      <aside className={\n        classNames(\n          'colour-selector',\n          {\n            'colour-selector--enabled': isColourSelectorVisible\n          }\n        )\n      }>\n        <div className=\"colour-selector--container\">\n          {\n            Object.keys(colours).map(colour => {\n              return <ColourButton \n                key={`colour-${colour}`} \n                colour={colour}\n                setColour={setColour}\n                isSelected={colour === selectedColour}\n              />\n            })\n          }\n        </div>\n      </aside> \n    )\n  }\n}\n\nColourSelector.propTypes = { \n  setColour: func.isRequired,\n  isColourSelectorVisible: bool.isRequired,\n  selectedColour: string\n}\n\nexport default ColourSelector\n","import React from 'react'\nimport classNames from 'classnames'\nimport {func} from 'prop-types'\nimport './styles.css'\n\nfunction AnimateHandleButton(props) {\n  const {\n    onAnimateHandle\n  } = props\n\n  return <button \n    className={\n      classNames(\n        'animate-stand'\n      )\n    }\n    onClick={()=>onAnimateHandle()}\n  >\n      Animate stand\n  </button>   \n}\n\nAnimateHandleButton.propTypes = { \n  onAnimateHandle: func.isRequired \n}\n\nexport default AnimateHandleButton","import React, { Component } from 'react'\nimport  * as THREE from 'three'\nimport STLLoader from 'three-stl-loader'\nimport ColourSelector from './components/ColourSelector'\nimport AnimateHandleButton from './components/AnimateHandleButton'\nimport {addResizeEvent} from 'services/resize'\nimport {\n  colours,\n  elements,\n  flashAnimateTime,\n  openAngle,\n  angleAnimateTime\n} from './services/config'\nimport './styles.css'\n\nclass Designer extends Component {\n\n  state = { \n    isColourSelectorVisible: false,\n    isStandOpen: false,\n    selectedColour: null,\n    selectedElementId: null,\n    isMoved: false,\n    isHandlesOpen: false,\n    isAnimatingHandles: false\n  }\n\n  isTicking = false\n  lastX = 0\n\n  constructor(props) {\n    super(props)\n    \n    // TOUCH/MOUSE/RESIZE EVENTS\n    this.onMouseUp = this.onMouseUp.bind(this)\n    this.onActionMove = this.onActionMove.bind(this)\n    this.onMouseDown = this.onMouseDown.bind(this)\n    this.onActionStart = this.onActionStart.bind(this)\n    this.onActionEnd = this.onActionEnd.bind(this)\n    this.addEventListeners = this.addEventListeners.bind(this)\n    this.removeEventListeners = this.removeEventListeners.bind(this)\n    this.onWindowResize = this.onWindowResize.bind(this)\n\n    this.setColour = this.setColour.bind(this)\n    this.onAnimateHandle = this.onAnimateHandle.bind(this)\n  }\n\n  componentDidMount(){\n    const width = this.mount.clientWidth\n    const height = this.mount.clientHeight\n\n    this.top = this.mount.offsetTop\n    this.left = this.mount.offsetLeft\n    this.height = height\n    this.width = width\n\n    //ADD SCENE\n    this.scene = new THREE.Scene()\n\n    // CAMERA\n    this.camera = new THREE.PerspectiveCamera(35, width / height, 1, 15)\n    this.scene = new THREE.Scene()\n    this.scene.background = new THREE.Color(0x6de2c3)\n    this.scene.fog = new THREE.Fog(0x6de2c9, 2, 20)\n    this.camera.position.set(1, 1.5, 2.8)\n    this.camera.lookAt(this.scene.position)\n    \n    //ADD RENDERER\n    this.renderer = new THREE.WebGLRenderer({ antialias: true })\n    this.renderer.setClearColor('#000000')\n    this.renderer.setSize(width, height)\n    this.renderer.setPixelRatio(window.devicePixelRatio)\n    this.renderer.gammaInput = true\n    this.renderer.gammaOutput = true\n    this.renderer.shadowMap.enabled = true\n\n    this.domElement = this.renderer.domElement\n    this.mount.appendChild(this.domElement)\n  \n    // ORBIT CONTROLS (CUSTOM)\n    this.camera_pivot = new THREE.Object3D()\n    this.Y_AXIS = new THREE.Vector3( 0, 1, 0 )\n    this.scene.add( this.camera_pivot )\n    this.camera_pivot.add( this.camera )\n    this.camera.lookAt( this.camera_pivot.position )\n  \n    // GROUND PLANE\n    const plane = new THREE.Mesh(\n      new THREE.PlaneBufferGeometry(40, 40),\n      new THREE.MeshPhongMaterial({ \n        color: 0x6de2c3\n  \n      })\n    )\n    plane.rotation.x = - Math.PI / 2\n    plane.position.y = - 0.5\n    this.scene.add(plane)\n    plane.receiveShadow = true\n\n    // LIGHTS\n    this.scene.add(new THREE.HemisphereLight(0x443333, 0x111122))\n    this.addShadowedLight(1, 1, 1, 0xffffff, 1.35)\n    this.addShadowedLight(0.5, 1, - 1, 0x999999, 1)\n\n    // LOADER\n    const threeSTLLoader = STLLoader(THREE)\n    this.intersectMeshes = [] \n    this.loader = new threeSTLLoader()\n    Object.keys(elements).forEach((elementId) => {\n      this.loadStl(elementId, elements[elementId])\n    })\n\n    // ADD EVENTLISTENERS\n    this.addEventListeners()\n  }\n\n  addEventListeners() {\n    const passiveOption = {\n      passive: true\n    }\n    this.domElement.addEventListener('mousedown', this.onMouseDown, false)\n    this.domElement.addEventListener('mouseup', this.onMouseUp, false)\n    this.domElement.addEventListener('touchstart', this.onActionStart, passiveOption)\n    this.domElement.addEventListener('touchmove', this.onActionMove, passiveOption)\n    this.domElement.addEventListener('touchend', this.onActionEnd, passiveOption)\n\n    addResizeEvent(this.onWindowResize)\n  }\n\n  removeEventListeners() {\n    this.domElement.removeEventListener('mousedown', this.onMouseDown, false)\n    this.domElement.removeEventListener('mouseup', this.onMouseUp, false)\n    this.domElement.removeEventListener('touchstart', this.onActionStart, false)\n    this.domElement.removeEventListener('touchmove', this.onActionMove, false)\n    this.domElement.removeEventListener('touchend', this.onActionEnd, false)\n  }\n\n  componentWillUnmount(){\n    this.removeEventListeners()\n  }\n\n  loadStl(id, element) {\n    const y = element.y || .5\n    const rotationY = element.rotationY || 0\n\n    this.loader.load(element.stl, (geometry) => {\n\n      geometry.applyMatrix(new THREE.Matrix4().makeTranslation(0, 10, 0))\n\n      const mesh = new THREE.Mesh(geometry, element.material)\n      mesh.position.set(0, y, 0)\n      mesh.scale.set(0.01, 0.01, 0.01)\n      mesh.rotation.set(0, rotationY ,  0)\n      mesh.castShadow = true\n      mesh.receiveShadow = true\n        \n      mesh.callback = () => {\n        this.selectElement(id)\n      }\n        \n      this.scene.add(mesh)\n\n      if (element.isEditable) {\n        const selectMaterial =  new THREE.MeshPhongMaterial({\n          color: 0xffffff, \n          opacity: 0,\n          transparent: true\n        })\n\n        const selectMesh = new THREE.Mesh(geometry, selectMaterial)\n        selectMesh.position.set(0, y, 0)\n        selectMesh.scale.set(0.01, 0.01, 0.01)\n        selectMesh.rotation.set(0, rotationY ,  0)\n\n        element.selectMaterial = selectMaterial\n        element.mesh = mesh\n        element.selectMesh = selectMesh\n        \n        this.scene.add(selectMesh)\n      }\n        \n      this.intersectMeshes.push(mesh)\n      this.renderScene()\n    })\n  }\n\n  addShadowedLight(x, y, z, color, intensity) {\n    const directionalLight = new THREE.DirectionalLight(color, intensity)\n    directionalLight.position.set(x, y, z)\n    this.scene.add(directionalLight)\n    directionalLight.castShadow = true\n    const d = 1\n    directionalLight.shadow.camera.left = - d\n    directionalLight.shadow.camera.right = d\n    directionalLight.shadow.camera.top = d\n    directionalLight.shadow.camera.bottom = - d\n    directionalLight.shadow.camera.near = 1\n    directionalLight.shadow.camera.far = 4\n    directionalLight.shadow.mapSize.width = 1024\n    directionalLight.shadow.mapSize.height = 1024\n    directionalLight.shadow.bias = - 0.002\n  }\n\n  selectElement(selectedElementId) {\n    const element = elements[selectedElementId]\n\n    if (element.isEditable) {\n      this.setState({\n        selectedElementId,\n        selectedColour: element.colour,\n        isColourSelectorVisible: true\n      })\n    \n      this.flashSelectedElement()\n    } else {\n      this.disableColourSelector()\n    }\n  } \n\n  animateFlash(start) {\n    const {\n      selectedElementId\n    } = this.state\n\n    const animateProgress = performance.now() - start\n    const opacity = 1 - (1 / flashAnimateTime) * animateProgress\n    const selectedElement = elements[selectedElementId]\n\n    selectedElement.selectMaterial.opacity = opacity\n\n    if (animateProgress < flashAnimateTime) {\n      window.requestAnimationFrame(() => {\n        this.animateFlash(start)\n      })\n    } else {\n      selectedElement.selectMaterial.opacity = 0\n    }\n\n    this.renderScene()\n  }\n\n  flashSelectedElement() {\n    const {\n      selectedElementId\n    } = this.state\n\n    const selectedElement = elements[selectedElementId]\n    selectedElement.selectMaterial.opacity = 1\n    this.animateFlash(performance.now())\n  }\n\n  renderScene = () => {\n    this.renderer.render(this.scene, this.camera)\n    this.isTicking = false\n  }\n\n  setColour(selectedColour) {\n    const {\n      selectedElementId\n    } = this.state\n\n    const selectedElement = elements[selectedElementId]\n    selectedElement.colour = selectedColour\n    selectedElement.material.color.setHex(colours[selectedColour])\n\n    this.setState({\n      selectedColour\n    })\n    \n    this.renderScene()\n  }\n\n  onMouseDown(event) {\n    this.onActionStart(event)\n    this.domElement.addEventListener('mousemove', this.onActionMove, false)\n  }\n  \n  onActionMove(event) {\n    const {\n      isMoved\n    } = this.state\n\n    if (!isMoved) {\n      this.setState({\n        isMoved: true\n      })\n    }\n\n    if (!this.isTicking) {\n      this.isTicking = true\n      \n      window.requestAnimationFrame(() => {\n        let nowX\n        if (event.clientX !== undefined) { \n          nowX = event.pageX\n        } else if (event.changedTouches[0] !== undefined) {\n          nowX = event.changedTouches[0].pageX\n        }\n\n        this.camera_pivot.rotateY((this.mouseX - nowX) * (2 * Math.PI)/this.width )\n        this.mouseX = nowX\n\n        this.renderScene()  \n      })\n    }\n  }\n\n  onMouseUp(event) {\n    this.domElement.removeEventListener('mousemove', this.onActionMove, false)\n    this.onActionEnd(event)\n  }\n\n  onActionStart(event) {\n    this.setState({\n      isMoved: false\n    })\n\n    if (event.clientX !== undefined) { \n      this.mouseX = event.pageX\n    } else if (event.changedTouches[0] !== undefined) {\n      this.mouseX = event.changedTouches[0].pageX\n    }\n  }\n\n  onActionEnd(event) {\n    const {\n      isMoved\n    } = this.state\n\n    if (!isMoved) {\n      this.detectIntersect(event)\n    }\n  }\n\n  disableColourSelector() {\n    this.setState({\n      isColourSelectorVisible: false,\n      selectedColour: null,\n      selectedElementId: null,\n    })\n  }\n\n  detectIntersect(event) {\n    const {\n      isMoved\n    } = this.state\n\n    if (!isMoved) {\n      const raycaster = new THREE.Raycaster()\n      const mouse = new THREE.Vector2()\n      \n      if (event.clientX !== undefined) { \n        mouse.x = ((event.pageX - this.left) / this.width) *2 - 1\n        mouse.y = -((event.pageY - this.top) / this.height) *2 + 1\n      } else if (event.changedTouches[0] !== undefined) {\n        mouse.x = ((event.changedTouches[0].pageX - this.left) / this.width) * 2 - 1\n        mouse.y = -((event.changedTouches[0].pageY - this.top) / this.height) * 2 + 1\n      }\n\n      raycaster.setFromCamera(mouse, this.camera)\n\n      const intersects = raycaster.intersectObjects(this.intersectMeshes) \n\n      if (intersects.length > 0) {\n        intersects[0].object.callback()\n      } else {\n        this.disableColourSelector()\n      }\n    }\n  }\n\n  onWindowResize() {\n    const width = this.mount.clientWidth\n    const height = this.mount.clientHeight\n    \n    this.top = this.mount.offsetTop\n    this.left = this.mount.offsetLeft\n    this.height = height\n    this.width = width\n\n    this.camera.aspect = width / height\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(width, height) \n\n    this.renderScene()\n  }\n\n  onAnimateHandle() {\n    const {\n      isAnimatingHandles,\n      isHandlesOpen\n    } = this.state\n\n    if (!isAnimatingHandles) {\n      this.animateHandle(performance.now(), isHandlesOpen)\n      this.setState({\n        isAnimatingHandles: true,\n        isHandlesOpen: !isHandlesOpen\n      })\n    }\n  }\n\n  animateHandle(start, isHandlesOpen) {\n    const animateProgress = performance.now() - start\n    let angle = (openAngle / angleAnimateTime) * animateProgress\n  \n    if (isHandlesOpen) {\n      angle = openAngle - angle\n      angle = (angle < 0)? 0: angle\n    } else {\n      angle = (angle > openAngle)? openAngle: angle\n    }\n  \n    elements.handle1.mesh.rotation.x = THREE.Math.degToRad(angle)\n    elements.handle1.selectMesh.rotation.x = THREE.Math.degToRad(angle)\n    elements.handle2.mesh.rotation.x = -THREE.Math.degToRad(angle)\n    elements.handle2.selectMesh.rotation.x = -THREE.Math.degToRad(angle)\n  \n    this.renderScene()\n  \n    if (animateProgress < angleAnimateTime) {\n      window.requestAnimationFrame(() => {\n        this.animateHandle(start, isHandlesOpen)\n      })\n    } else {\n      this.setState({\n        isAnimatingHandles: false\n      })\n    }\n  }\n\n  render() {\n    const { \n      isColourSelectorVisible,\n      selectedColour\n    } = this.state\n\n    return (\n      <div \n        id=\"designer\"\n        className=\"designer\" \n        ref={(mount) => { this.mount = mount }}\n      >\n        <ColourSelector \n          setColour={this.setColour}\n          {...{\n            isColourSelectorVisible,\n            selectedColour\n          }}\n        /> \n        <AnimateHandleButton\n          onAnimateHandle = {this.onAnimateHandle}\n        />   \n      </div>\n    )\n  }\n}\n\nexport default Designer\n","import React, { Component } from 'react'\nimport {addResizeEvent} from 'services/resize'\n\nimport {\n  element\n} from 'prop-types'\nimport './styles.css'\n\nclass ParallaxPanel extends Component {\n\n  top = 0\n  height = 0\n  range = 0\n  state = {\n    y: 0\n  }\n  isTicking = false\n\n  constructor() {\n    super()\n\n    this.onResizeEvent = this.onResizeEvent.bind(this)\n    this.fixedParallax = this.fixedParallax.bind(this)  \n    this.rangeParallax = this.rangeParallax.bind(this)    \n    this.lockingParallax = this.lockingParallax.bind(this) \n    this.scroll = this.scroll.bind(this) \n  }\n  \n  onResizeEvent() {\n    const boundingClientRect = this.parallax.getBoundingClientRect()\n    this.top = Math.ceil(boundingClientRect.top + window.scrollY)\n    this.height = boundingClientRect.height\n  }\n\n  componentDidMount() {\n    const {\n      type, \n      range\n    } = this.props\n\n    this.onResizeEvent()\n    addResizeEvent(this.onResizeEvent)\n    \n    switch(type) {\n    case 'fixed':\n      this.parallaxEvent = this.fixedParallax\n      break\n    case 'range':\n      this.parallaxEvent = this.rangeParallax\n      this.range = range || 400\n      break\n    case 'locking':\n      this.parallaxEvent = this.lockingParallax\n      break\n    default:\n      this.parallaxEvent = this.lockingParallax\n    }\n\n    window.addEventListener('scroll', this.parallaxEvent, {\n      passive: true\n    })\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.parallaxEvent, false)\n  }\n\n  scroll() {\n    if(!this.isTicking) {\n      this.isTicking = true\n      window.requestAnimationFrame(() => {\n        this.parallaxEvent()\n      })\n    }\n  }\n\n  rangeParallax() {\n    let scrollY = window.scrollY\n    scrollY = (scrollY < 0) ? 0 : scrollY\n\n    if (scrollY < this.top + this.height && scrollY >= this.top - this.height)\n      this.setState({\n        y: -Math.ceil(((this.top - scrollY)/ this.height) * this.range)\n      })\n    this.isTicking = false  \n  }\n\n  fixedParallax() {    \n    \n    let scrollY = window.scrollY\n    scrollY = (scrollY < 0) ? 0 : scrollY\n\n    if (scrollY < this.top + this.height && scrollY >= this.top - this.height)\n      this.setState({\n        y: Math.ceil(scrollY - this.top)\n      })\n    this.isTicking = false    \n  }\n\n  lockingParallax() {\n    let scrollY = window.scrollY\n    scrollY = (scrollY < 0) ? 0 : scrollY\n    \n    if (scrollY < this.top  && scrollY >= this.top - this.height) {\n      this.setState({\n        y: Math.ceil(scrollY - this.top)\n      })  \n    } else if (this.state.y !== 0) {\n      this.setState({\n        y: 0\n      })\n    }\n\n    this.isTicking = false  \n  }\n\n  render() {\n    const {\n      children\n    } = this.props\n    const {\n      y\n    } = this.state\n\n    return (\n      <section \n        className=\"parallax-panel\"\n        ref={(parallax) => { this.parallax = parallax }}\n      >\n        <div \n          className=\"parallax-panel--container\"\n          style={{\n            transform: `translateY(${y}px)`,\n          }}\n        > \n          {children}\n        </div>\n      </section> \n    )\n  }\n}\n\nParallaxPanel.propTypes = {\n  children: element.isRequired\n}\n\nexport default ParallaxPanel\n","import React, { Component } from 'react'\nimport {string} from 'prop-types'\nimport { addResizeEvent } from 'services/resize'\nimport './styles.css'\nimport ParallaxPanel from 'components/ParallaxPanel'\n\nclass HeroVideo extends Component {\n\n  constructor() {\n    super()\n    this.repositionVideo = this.repositionVideo.bind(this)\n  }\n\n  componentDidMount(){\n    this.repositionVideo()\n    addResizeEvent(this.repositionVideo)\n  }\n\n  repositionVideo() {\n    const width =  this.hero.clientWidth\n    const height = this.hero.clientHeight\n    const calcWidth = 16 * (height / 9)\n    const calcHeight = 9 * (width / 16)\n\n    if (calcWidth < width) {\n      this.iframe.width = width\n      this.iframe.height = calcHeight\n      this.iframe.style.top = `${-(calcHeight - height) / 2}px`\n      this.iframe.style.left = 0\n    }\n\n    if (calcHeight < height) {\n      this.iframe.width = calcWidth\n      this.iframe.height = height\n      this.iframe.style.top = 0\n      this.iframe.style.left = `${-(calcWidth - width) / 2}px`\n    }\n  }\n\n  render() {\n    const {\n      src\n    } = this.props\n    return (\n      <ParallaxPanel type=\"fixed\">\n        <div className=\"hero-video\" ref={(hero) => { this.hero = hero }}>\n          <iframe \n            className=\"hero-video__iframe\"\n            title=\"hero-video\"\n            ref={(iframe) => { this.iframe = iframe }}\n            src={src}\n            allow=\"autoplay\"\n          ></iframe>\n        </div>\n      </ParallaxPanel>\n    )\n  }\n}\n\nHeroVideo.propTypes = { \n  src: string.isRequired,\n}\n\nexport default HeroVideo\n","import React, { Component } from 'react'\nimport {addResizeEvent} from 'services/resize'\nimport {\n  number,\n  string\n} from 'prop-types'\nimport './styles.css'\n\nimport ParallaxPanel from 'components/ParallaxPanel'\n\nclass ParallaxImage extends Component {\n  constructor() {\n    super()\n\n    this.repositionImage = this.repositionImage.bind(this)\n  }\n  componentDidMount(){\n    addResizeEvent(this.repositionImage)\n    this.repositionImage()\n  }\n\n  repositionImage() {\n    const width =  this.imageContainer.clientWidth\n    const height = this.imageContainer.clientHeight\n    const calcWidth = Math.ceil(16 * (height / 9))\n    const calcHeight = Math.ceil(9 * (width / 16))\n\n    if (calcWidth < width) {\n      this.image.width = width\n      this.image.height = calcHeight\n      this.image.style.top = `${-(calcHeight - height) / 2}px`\n      this.image.style.left = 0\n    }\n\n    if (calcHeight < height) {\n      this.image.width = calcWidth\n      this.image.height = height\n      this.image.style.top = 0\n      this.image.style.left = `${-(calcWidth - width) / 2}px`\n    }\n  }\n\n  render() {\n    const {\n      type,\n      range,\n      alt,\n      src\n    } = this.props\n\n    return (\n      <ParallaxPanel {...{type, range}}>\n        <div \n          className=\"parallax-image\"\n          ref={(imageContainer) => { this.imageContainer = imageContainer }}\n        >\n          <img \n            className=\"parallax-image--img\"\n            src={src} \n            alt={alt} \n            ref={(image) => { this.image = image }}\n          />\n        </div>\n      </ParallaxPanel>\n    )\n  }\n}\n\nParallaxImage.propTypes = { \n  type: string.isRequired,\n  range: number,\n  alt: string.isRequired,\n  src: string.isRequired\n}\n\nexport default ParallaxImage\n","import React, { Component } from 'react'\nimport {addResizeEvent} from 'services/resize'\nimport mapboxgl from 'mapbox-gl'\nimport {\n  mapboxToken,\n  defaultLng,\n  defaultLat,\n  defaultZoom,\n  circleRadius\n} from './services/config'\nimport './styles.css'\n\nclass Map extends Component {\n  constructor() {\n    super()\n\n    this.repositionMap = this.repositionMap.bind(this)\n    this.getLocation = this.getLocation.bind(this)\n  }\n\n  componentDidMount() {\n    addResizeEvent(this.repositionMap)\n    this.repositionMap()\n\n    mapboxgl.accessToken = mapboxToken\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v9', \n      center: [defaultLng, defaultLat], \n      zoom: defaultZoom\n    })\n    this.map.scrollZoom.disable()\n    this.map.on('load', () => this.getLocation())\n  }\n\n  renderCircle(lng, lat) {\n    this.map.addSource('polygon', this.createGeoJSONCircle([lng, lat], circleRadius))\n  \n    this.map.addLayer({\n      'id': 'polygon',\n      'type': 'fill',\n      'source': 'polygon',\n      'layout': {},\n      'paint': {\n        'fill-color': 'blue',\n        'fill-opacity': 0.6\n      }\n    })\n  }\n\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.map.flyTo({\n          center: [\n            position.coords.longitude,\n            position.coords.latitude,\n          ]\n        })\n        this.renderCircle(position.coords.longitude, position.coords.latitude)\n      })\n    } else {\n      this.map.addSource('polygon', this.createGeoJSONCircle([defaultLng, defaultLat], circleRadius))\n    }\n  }\n  \n  updateMapPosition(position) {\n    console.log(position)\n  }\n\n  repositionMap() {\n\n  }\n\n  createGeoJSONCircle = function(center, radiusInKm, points) {\n    if(!points) points = 64\n\n    var coords = {\n      latitude: center[1],\n      longitude: center[0]\n    }\n\n    var km = radiusInKm\n\n    var ret = []\n    var distanceX = km/(111.320*Math.cos(coords.latitude*Math.PI/180))\n    var distanceY = km/110.574\n\n    var theta, x, y\n    for(var i=0; i<points; i++) {\n      theta = (i/points)*(2*Math.PI)\n      x = distanceX*Math.cos(theta)\n      y = distanceY*Math.sin(theta)\n\n      ret.push([coords.longitude+x, coords.latitude+y])\n    }\n    ret.push(ret[0])\n\n    return {\n      'type': 'geojson',\n      'data': {\n        'type': 'FeatureCollection',\n        'features': [{\n          'type': 'Feature',\n          'geometry': {\n            'type': 'Polygon',\n            'coordinates': [ret]\n          }\n        }]\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div \n        className=\"map\"\n        ref={(mapContainer) => { this.mapContainer = mapContainer }}\n      ></div>\n    )\n  }\n}\n\nexport default Map\n","const mapboxToken = 'pk.eyJ1IjoiY2hyaXNnd2dyZWVuIiwiYSI6ImNpamlqYmlhNzAwM2d2NW00MTZha3hqMWYifQ.XaIo3tGD3x0ugYZLkMhNQw'\nconst defaultLng =  -0.118092\nconst defaultLat = 51.509865\nconst defaultZoom = 3\nconst circleRadius = 713.64964646111\n\nexport {\n  mapboxToken,\n  defaultLng,\n  defaultLat,\n  defaultZoom,\n  circleRadius\n}","import React, { Component } from 'react'\nimport {isWebGLAvailable} from 'services/webgl'\nimport './styles.css'\n\nimport Designer from 'components/Designer'\nimport HeroVideo from 'components/HeroVideo'\nimport ParallaxImage from 'components/ParallaxImage'\nimport Map from './components/Map'\n\nclass Home extends Component {\n  render() {\n    const designer = (isWebGLAvailable()) ? <Designer/> : null\n    \n    return (\n      <div className=\"home\">        \n        <HeroVideo \n          src={'https://player.vimeo.com/video/272984380?api=1&background=1&muted=1&loop=1&autoplay=1'}\n        />  \n        <div className=\"home-container\">\n          MISSION\n        </div>\n        <ParallaxImage type=\"range\" range={200} src=\"./images/light_7.jpg\" alt=\"Natural Image\"/>\n        <div className=\"home-container home-container--black\">\n          The Great Pacific Garbage Patch is the largest accumulation of ocean plastic in the world covering \n          an estimated surface of 1.6 million square kilometers.\n        </div>\n        <ParallaxImage type=\"range\" range={200} src=\"./images/light_7.jpg\" alt=\"Natural Image\"/>\n        <Map/>\n        <div className=\"home-container home-container--black\"></div>\n        <ParallaxImage type=\"range\" range={300} src=\"./images/unfolded-blue.png\" alt=\"Natural Image\"/>\n        <div className=\"home-container home-container--black\"></div>\n        {designer}\n        <ParallaxImage type=\"range\" range={200} src=\"./images/light_7.jpg\" alt=\"Natural Image\"/>\n        <div className=\"home-container home-container--black\">\n          FOOTER\n        </div>    \n      </div>\n    )\n  }\n}\n\nexport default Home\n","const isWebGLAvailable = () => { \n  try {\n    const canvas = document.createElement('canvas') \n    return !!window.WebGLRenderingContext &&\n     (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))\n  } catch(e) {\n    return false\n  }\n}\n\nexport {\n  isWebGLAvailable\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport {initResize} from 'services/resize'\n\nimport Home from 'scenes/Home'\n\nReactDOM.render(\n  <Home />, \n  document.getElementById('root'),\n  () => {\n    initResize()\n  }\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}